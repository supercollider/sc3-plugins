TITLE:: PVFile
summary:: Reads and prepares data from CSounds pvanal program
categories:: Libraries>JoshUGens, UGens>FFT
related:: Classes/PVAna

DESCRIPTION::
note::
This currently only works with .pv files. .pvx and CSound 5 files will be implemented soon.
::

CLASSMETHODS::

METHOD:: new

ARGUMENT:: path
Path to a CSound pv file.

ARGUMENT:: server
The server that data will be loaded on to. Defaults to Server.default.

METHOD:: load
Read and load directly to the server.

ARGUMENT:: path

ARGUMENT:: server


INSTANCEMETHODS::

METHOD:: checkMN

METHOD:: path

METHOD:: saveForSC
To use NRT - you must re-write the data file out as a sound file!
ARGUMENT:: path
The path to save the soudfile to. This can then be allocRead 'd into a Score.

METHOD:: nBins
The number of bins in the analysis.

METHOD:: sndDur
The duration of the sound file analyzed.

METHOD:: headerSize

METHOD:: mags

METHOD:: fileSize

METHOD:: calcMagScale

METHOD:: signal

METHOD:: buffer
The buffer number where PVFile stores data to a server.

METHOD:: bufnum

METHOD:: server

METHOD:: nFrames
The number of frames in the analysis.

METHOD:: save
ARGUMENT:: path

METHOD:: pvpvoc

METHOD:: loadToBuffer
Load pc data to a buffer for real-time performance.
ARGUMENT:: buf
A buffer to load to. If nil, one is allocated for you.

METHOD:: asControlInput

METHOD:: loaded

METHOD:: readData

METHOD:: maxFreq
From the header, the highest freq analyzed.

METHOD:: minFreq
From the header, the lowest freq analyzed.

METHOD:: hopSize

METHOD:: magScale
A (possibly vain) attempt to figure out an appropriate amplitude to scale the output of PVSynth by. Returns the reciprocal of the average of all mags times the number of bins.
code:: (mags.flat.mean * nBins).reciprocal::

METHOD:: spacing

METHOD:: getBinFreqs
Returns an array of freqs of nFrames length for bin.
ARGUMENT:: bin

METHOD:: frameBSize

METHOD:: le

METHOD:: data
An array showing the data form the pv file.
returns:: An Array

METHOD:: sr

METHOD:: fileFormat

METHOD:: freeBuffer
Liberates the buffer from SuperCollider tyranny.

METHOD:: asUGenInput

METHOD:: header
Returns the pv file's header. (well... most of it).

METHOD:: readHeader

METHOD:: numChannels

METHOD:: getFrameFreqs
Returns an array of freqs of nBins length for a given frame.
ARGUMENT:: frame

METHOD:: freqs

METHOD:: len

METHOD:: windowSize

METHOD:: magicNum

METHOD:: getBinMags
Returns an array of mags of nFrames length for bin.
ARGUMENT:: bin

METHOD:: getFrameMags
Returns an array of mags of nBins length for a given frame.
ARGUMENT:: frame

METHOD:: init

ARGUMENT:: argpath

ARGUMENT:: argserver


EXAMPLES::
code::
a = PVFile.new(Platform.resourceDir +/+ "sounds/cl-c4.pv", s);
::
