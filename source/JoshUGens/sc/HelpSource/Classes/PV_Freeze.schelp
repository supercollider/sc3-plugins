TITLE:: PV_Freeze
summary:: Freeze FFT frames
categories:: Libraries>JoshUGens, UGens>FFT
related:: Guides/FFT-Overview

DESCRIPTION::
Freezes magnitudes at current levels when freeze > 0, and advances phase
according to difference between frames to try and maintain currect spectral
quality.

CLASSMETHODS::

METHOD:: new

ARGUMENT:: buffer
FFT buffer.

ARGUMENT:: freeze
If freeze > 0, then magnitudes are frozen at current levels.



INSTANCEMETHODS::


EXAMPLES::

code::
s.boot;
(
b = Buffer.alloc(s,1024);
c = Buffer.read(s, Platform.resourceDir +/+ "sounds/a11wlk01.wav");
)

// compare PV_Freeze with PV_MagFreeze
(
SynthDef("help-freeze", { arg out=0, bufnum=0;
    var in, chain;
    in = SinOsc.ar(LFNoise1.kr(5.2,250,400));
    chain = FFT(bufnum, in);
    // uncomment the line below to compare while ...
    //chain = PV_MagFreeze(chain, SinOsc.kr(0.2) );
    // commenting the line below
    chain = PV_Freeze(chain, SinOsc.kr(0.2) );
    Out.ar(out, 0.5 * IFFT(chain).dup);
}).play(s,[\out, 0, \bufnum, b.bufnum]);
)

(
//trig with MouseY
SynthDef("help-magFreeze2", { arg out=0, bufnum=0, soundBufnum=2;
    var in, chain;
    in = PlayBuf.ar(1, soundBufnum, BufRateScale.kr(soundBufnum), loop: 1);
    chain = FFT(bufnum, in);
    // uncomment the line below to compare while ...
    // chain = PV_MagFreeze(chain, MouseY.kr > 0.5 );
    // commenting the line below
    chain = PV_Freeze(chain, MouseY.kr > 0.5 );
    Out.ar(out, 0.5 * IFFT(chain).dup);
}).play(s,[\out, 0, \bufnum, b.bufnum, \soundBufnum, c.bufnum]);
)

b.free; c.free;
::